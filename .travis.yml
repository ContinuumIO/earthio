language: python

dist: trusty

env:
  global:
    - EARTHIO_TEST_ENV=earth-test-env
    - ELM_EXAMPLE_DATA_PATH=/tmp/elm-data
    - EARTHIO_CHANNEL_STR=" -c ioam -c conda-forge -c scitools/label/dev "

  matrix:
    - PYTHON=3.6 NUMPY=1.12
    - PYTHON=3.5 NUMPY=1.11
    - PYTHON=2.7 NUMPY=1.9

matrix:
  # Support for these versions of Python is still a work-in-progress
  allow_failures:
    - env: PYTHON=3.6 NUMPY=1.12
    - env: PYTHON=2.7 NUMPY=1.9

  # The build result is determined as soon as the required builds pass/fail
  fast_finish: true

before_install:
  - mkdir -p $ELM_EXAMPLE_DATA_PATH
  - rm -rf $ELM_EXAMPLE_DATA_PATH/*

install:
  - MAKE_MINICONDA=1 . build_earthio_env.sh

script:
  - cd $EARTHIO_BUILD_DIR
  - . activate $EARTHIO_TEST_ENV
  - py.test -m 'not slow and not requires_elm' --ignore=earthio/tests/test_tif.py --ignore=earthio/tests/test_netcdf.py -v earthio/tests
  - rm -rf $ELM_EXAMPLE_DATA_PATH/*

notifications:
  on_success: change
  on_failure: always
  flowdock: $FD_TOKEN

deploy:
  - provider: script
    script:
      - conda install --name root anaconda-client python=3.5 conda-build==2.0.4 && conda build $EARTHIO_CHANNEL_STR --output --python $PYTHON --numpy $NUMPY conda.recipe | xargs conda convert -p all -o _pkgs && find _pkgs -type f -name "*.tar.bz2" -exec anaconda -t $ANACONDA_UPLOAD_TOKEN upload --user $ANACONDA_UPLOAD_USER --label dev {} \+
    on:
      tags: false
      all_branches: true
    skip_cleanup: true
